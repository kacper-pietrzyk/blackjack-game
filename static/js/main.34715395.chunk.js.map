{"version":3,"sources":["components/Main/ResultMessage/ResultMessage.module.scss","components/Header/Settings/Settings.module.scss","components/Footer/Tokens/Tokens.module.scss","components/Main/Bet/Bet.module.scss","components/Footer/Actions/Actions.module.scss","components/Main/BackgroundText/BackgroundText.module.scss","components/Header/Header.module.scss","components/Footer/Footer.module.scss","components/Main/PlayerCards/PlayerCards.module.scss","components/Main/CardPicture/CardPicture.module.scss","components/Root/Root.module.scss","components/Footer/Stats/Ranking/Ranking.module.scss","components/Footer/Stats/RoundHistory/RoundHistory.module.scss","components/Main/Main.module.scss","components/AppContext/AppContext.js","components/Root/getPlayerCardsSum.js","components/Root/getCards.js","components/Footer/Actions/Actions.js","components/Footer/Stats/Ranking/Ranking.js","components/Footer/Stats/RoundHistory/RoundHistory.js","components/Footer/Stats/Stats.js","components/Footer/Tokens/Tokens.js","components/Footer/Footer.js","components/Main/resetGame.js","components/Header/Settings/Settings.js","components/Header/Header.js","components/Main/BackgroundText/BackgroundText.js","components/Main/Bet/Bet.js","components/Main/CardPicture/CardPicture.js","components/Main/PlayerCards/PlayerCards.js","components/Main/ResultMessage/ResultMessage.js","components/Main/Main.js","components/Root/Root.js","reportWebVitals.js","index.js"],"names":["module","exports","AppContext","createContext","getPlayerCardsSum","cards","allValues","map","card","value","Number","numberValues","filter","isInteger","aceValues","sum","reduce","prevValue","length","forEach","getCards","deckId","numberOfCards","playerCards","setPlayerCards","setPlayerSum","cardsUrl","fetch","then","response","status","json","Error","statusText","result","playerSum","catch","err","console","log","Actions","useContext","bet","setBet","credit","setCredit","dealerCards","setDealerCards","dealerCardsSum","setDealerCardsSum","deck","isDoubleDownAvailable","isUserTurnFinished","setIsDoubleDownAvailable","setIsUserTurnFinished","setWinner","userCards","setUserCards","userCardsSum","setUserCardsSum","handleAction","e","target","name","deck_id","dealerTurn","useEffect","className","styles","actionsWrapper","actionsWrapper__action","onClick","Ranking","ranking","RoundHistory","roundHistory","Stats","Tokens","increaseBet","tokensWrapper","tokensWrapper__token","Footer","isDealAccepted","footer","noSelect","resetGame","setDeck","setIsDealAccepted","setRoundNumber","Settings","saveGame","loadGame","state","saveActive","loadActive","useState","resetActive","setResetActive","icon","faSave","option","title","faFolderOpen","faSyncAlt","setTimeout","resetMessage","resetMessage__text","Header","roundNumber","header","header__round","BackgroundText","backgroundTextWrapper","backgroundTextWrapper__text","Bet","getNewDeck","bet__deal","bet__tokenWrapper","bet__header","bet__token","CardPicture","src","card__img","alt","PlayerCards","playerCardsSum","cardsImg","images","png","code","Math","floor","random","player","player__cardsValue","ResultMessage","winner","click","userIsWinner","result__header","dealerIsWinner","result__header_big","draw","gameOver","resultWrapper","result__nextGame","Main","getInitialCards","handleNextRound","main","Root","setSaveActive","setLoadActive","Provider","wrapper","localStorage","setItem","JSON","stringify","gameToLoad","parse","getItem","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.34715395.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"resultWrapper\":\"ResultMessage_resultWrapper__1HeYg\",\"result\":\"ResultMessage_result__3Xdf_\",\"result__header\":\"ResultMessage_result__header__4S2VU\",\"result__header_big\":\"ResultMessage_result__header_big__3Y-oQ\",\"result__nextGame\":\"ResultMessage_result__nextGame__2cO3g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"option\":\"Settings_option__2bTZr\",\"resetMessage\":\"Settings_resetMessage__1OaT8\",\"resetMessage__text\":\"Settings_resetMessage__text__282mW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tokensWrapper\":\"Tokens_tokensWrapper__2q1i4\",\"tokensWrapper__token\":\"Tokens_tokensWrapper__token__3MVuB\",\"tokensWrapper__allIn\":\"Tokens_tokensWrapper__allIn__1c1xq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bet\":\"Bet_bet__8BES6\",\"bet__tokenWrapper\":\"Bet_bet__tokenWrapper__3aPfS\",\"bet__header\":\"Bet_bet__header__2htp4\",\"bet__token\":\"Bet_bet__token__2V7tj\",\"bet__deal\":\"Bet_bet__deal__oJWhe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actionsWrapper\":\"Actions_actionsWrapper__2j_7d\",\"actionsWrapper__action\":\"Actions_actionsWrapper__action__2v3sA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backgroundTextWrapper\":\"BackgroundText_backgroundTextWrapper__3RmOg\",\"backgroundTextWrapper__text\":\"BackgroundText_backgroundTextWrapper__text__yVKYi\",\"noSelect\":\"BackgroundText_noSelect__3WTzX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__gdzrj\",\"header__round\":\"Header_header__round__bK0mY\",\"noSelect\":\"Header_noSelect__1BQCC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__27C9m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"player\":\"PlayerCards_player__1jtSt\",\"player__cardsValue\":\"PlayerCards_player__cardsValue__1D9R9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"CardPicture_card__1J3W7\",\"card__img\":\"CardPicture_card__img__3iDGS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Root_wrapper__2H26R\",\"noSelect\":\"Root_noSelect__wHgVK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ranking\":\"Ranking_ranking__gJYAn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"roundHistory\":\"RoundHistory_roundHistory__2L7P5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Main_main__f7gDU\"};","import { createContext } from 'react';\r\n\r\nexport const AppContext = createContext();","export const getPlayerCardsSum = cards => {\r\n\r\n  const allValues = cards.map(card => {\r\n    if (card.value === \"JACK\" ||\r\n      card.value === \"QUEEN\" ||\r\n      card.value === \"KING\") {\r\n      return 10;\r\n    } else if (card.value === \"ACE\") {\r\n      return card.value;\r\n    }\r\n    else {\r\n      return Number(card.value);\r\n    }\r\n  })\r\n\r\n  const numberValues = allValues.filter(value => Number.isInteger(value));\r\n\r\n  const aceValues = allValues.filter(value => value === \"ACE\");\r\n\r\n  const integerSum = numberValues.reduce((prevValue, value) => {\r\n    return prevValue + value;\r\n  })\r\n  let sum = integerSum;\r\n  if (aceValues.length) {\r\n    aceValues.forEach(() => {\r\n      if (sum <= 10) {\r\n        sum += 11;\r\n      } else {\r\n        sum += 1;\r\n      }\r\n    })\r\n  }\r\n\r\n  return sum;\r\n}","import { getPlayerCardsSum } from './getPlayerCardsSum';\r\n\r\nexport const getCards = (deckId, numberOfCards, playerCards, setPlayerCards, setPlayerSum) => {\r\n  const cardsUrl = `https://deckofcardsapi.com/api/deck/${deckId}/draw/?count=${numberOfCards}`;\r\n\r\n  fetch(cardsUrl)\r\n    .then(response => {\r\n      if (response.status === 200) {\r\n        return response.json()\r\n      }\r\n      throw Error(response.statusText);\r\n    })\r\n    .then(result => {\r\n      if (playerCards) {\r\n        setPlayerCards([...playerCards, ...result.cards]);\r\n        const playerSum = getPlayerCardsSum([...playerCards, ...result.cards]);\r\n        setPlayerSum(playerSum);\r\n      } else {\r\n        setPlayerCards(result.cards);\r\n        const playerSum = getPlayerCardsSum(result.cards);\r\n        setPlayerSum(playerSum);\r\n      }\r\n    })\r\n    .catch(err => console.log(`${err}: Failed to get cards from API`));\r\n}","import React, { useContext, useEffect } from 'react';\r\nimport styles from './Actions.module.scss';\r\n\r\nimport { AppContext } from '../../AppContext/AppContext';\r\nimport { getCards } from '../../Root/getCards';\r\n\r\nconst Actions = () => {\r\n\r\n  const {\r\n    bet, setBet,\r\n    credit, setCredit,\r\n    dealerCards, setDealerCards,\r\n    dealerCardsSum, setDealerCardsSum,\r\n    deck,\r\n    isDoubleDownAvailable,\r\n    isUserTurnFinished,\r\n    setIsDoubleDownAvailable,\r\n    setIsUserTurnFinished,\r\n    setWinner,\r\n    userCards, setUserCards,\r\n    userCardsSum, setUserCardsSum } = useContext(AppContext);\r\n\r\n  const handleAction = e => {\r\n    if (e.target.name === \"Hit\") {\r\n      getCards(deck.deck_id, 1, userCards, setUserCards, setUserCardsSum);\r\n      setIsDoubleDownAvailable(false);\r\n    } else if (e.target.name === \"Stand\") {\r\n      setIsUserTurnFinished(true);\r\n      if (dealerCardsSum < 17) {\r\n        dealerTurn();\r\n      }\r\n    } else if (e.target.name === \"DoubleDown\") {\r\n      getCards(deck.deck_id, 1, userCards, setUserCards, setUserCardsSum);\r\n      setBet(bet * 2);\r\n      setCredit(credit - bet);\r\n      setIsUserTurnFinished(true);\r\n      if (dealerCardsSum < 17) {\r\n        dealerTurn();\r\n      }\r\n    }\r\n    if (isUserTurnFinished && dealerCardsSum < 17) {\r\n      dealerTurn();\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n    if (userCardsSum > 21) {\r\n      setWinner(\"dealer\");\r\n      setIsUserTurnFinished(true);\r\n    }\r\n    else if (isUserTurnFinished) {\r\n      if (userCardsSum === dealerCardsSum) {\r\n        setWinner(\"draw\");\r\n      } else if (userCardsSum <= 21 && userCardsSum > dealerCardsSum) {\r\n        setWinner(\"user\");\r\n      } else {\r\n        setWinner(\"dealer\");\r\n      }\r\n    }\r\n\r\n  }, [dealerCardsSum, isUserTurnFinished, setIsUserTurnFinished, setWinner, userCardsSum]);\r\n\r\n  const dealerTurn = () => {\r\n    if (dealerCardsSum < 17) {\r\n      getCards(deck.deck_id, 1, dealerCards, setDealerCards, setDealerCardsSum);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {!isUserTurnFinished && (\r\n        <div className={styles.actionsWrapper}>\r\n          <button\r\n            className={styles.actionsWrapper__action}\r\n            name=\"Hit\"\r\n            onClick={handleAction}>\r\n            Hit\r\n        </button>\r\n          <button\r\n            className={styles.actionsWrapper__action}\r\n            name=\"Stand\" onClick={handleAction}>\r\n            Stand\r\n        </button>\r\n          {(isDoubleDownAvailable && (credit >= bet)) &&\r\n            <button\r\n              className={styles.actionsWrapper__action}\r\n              name=\"DoubleDown\"\r\n              onClick={handleAction}>\r\n              Double Down\r\n        </button>}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Actions;","import React from 'react';\r\nimport styles from './Ranking.module.scss';\r\n\r\nconst Ranking = () => {\r\n  return (\r\n    <p className={styles.ranking}>Ranking</p>\r\n  );\r\n}\r\n\r\nexport default Ranking;","import React from 'react';\r\nimport styles from './RoundHistory.module.scss';\r\n\r\nconst RoundHistory = () => {\r\n  return (\r\n    <p className={styles.roundHistory}>Round History</p>\r\n  );\r\n}\r\n\r\nexport default RoundHistory;","import React from 'react';\r\n\r\nimport Ranking from './Ranking/Ranking';\r\nimport RoundHistory from './RoundHistory/RoundHistory';\r\n\r\nconst Stats = () => {\r\n  return (\r\n    <div>\r\n      <Ranking />\r\n      <RoundHistory />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Stats;","import React, { useContext } from 'react';\r\nimport styles from './Tokens.module.scss';\r\n\r\nimport { AppContext } from '../../AppContext/AppContext';\r\n\r\nconst Tokens = () => {\r\n\r\n  const {\r\n    bet, setBet,\r\n    credit, setCredit, } = useContext(AppContext);\r\n\r\n  const increaseBet = e => {\r\n    const value = Number(e.target.value);\r\n    setCredit(credit - value);\r\n    setBet(bet + value);\r\n  }\r\n\r\n  return (\r\n    <div className={styles.tokensWrapper}>\r\n      {credit >= 5 && <button className={styles.tokensWrapper__token} value={5} onClick={increaseBet}>$5</button>}\r\n      {credit >= 10 && <button className={styles.tokensWrapper__token} value={10} onClick={increaseBet}>$10</button>}\r\n      {credit >= 25 && <button className={styles.tokensWrapper__token} value={25} onClick={increaseBet}>$25</button>}\r\n      {credit >= 100 && <button className={styles.tokensWrapper__token} value={100} onClick={increaseBet}>$100</button>}\r\n      {/* {credit === 0 && <h2 className={styles.tokensWrapper__allIn}>All-in</h2>} */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tokens;","import React, { useContext } from 'react';\r\nimport styles from './Footer.module.scss';\r\n\r\nimport Actions from './Actions/Actions';\r\nimport Stats from './Stats/Stats';\r\nimport Tokens from './Tokens/Tokens';\r\n\r\nimport { AppContext } from '../AppContext/AppContext';\r\n\r\nconst Footer = () => {\r\n\r\n  const {\r\n    credit,\r\n    isDealAccepted } = useContext(AppContext);\r\n\r\n  return (\r\n    <footer className={`${styles.footer} ${styles.noSelect}`}>\r\n      <Stats />\r\n      {!isDealAccepted && <Tokens />}\r\n      {isDealAccepted && <Actions />}\r\n      <p>Credit: ${credit}</p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;","export const resetGame = (setCredit, setBet, setDealerCards, setDealerCardsSum, setDeck, setIsDealAccepted, setIsDoubleDownAvailable, setIsUserTurnFinished, setWinner, setRoundNumber, setUserCards, setUserCardsSum) => {\r\n\r\n  setCredit(1000)\r\n  setBet(0);\r\n  setDealerCards(null);\r\n  setDealerCardsSum(0);\r\n  setDeck()\r\n  setIsDealAccepted(false);\r\n  setIsDoubleDownAvailable(true);\r\n  setIsUserTurnFinished(false);\r\n  setWinner('');\r\n  setRoundNumber(1);\r\n  setUserCards(null);\r\n  setUserCardsSum(0);\r\n}","import React, { useState, useContext } from 'react';\r\n\r\nimport styles from './Settings.module.scss';\r\n\r\nimport { AppContext } from '../../AppContext/AppContext';\r\nimport { resetGame } from '../../Main/resetGame';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSave, faFolderOpen, faSyncAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Settings = ({ saveGame, loadGame }) => {\r\n\r\n  const state = useContext(AppContext);\r\n  const { saveActive, loadActive } = useContext(AppContext);\r\n\r\n  const [resetActive, setResetActive] = useState(false);\r\n\r\n  const handleReset = () => {\r\n\r\n    resetGame(\r\n      state.setCredit,\r\n      state.setBet,\r\n      state.setDealerCards,\r\n      state.setDealerCardsSum,\r\n      state.setDeck,\r\n      state.setIsDealAccepted,\r\n      state.setIsDoubleDownAvailable,\r\n      state.setIsUserTurnFinished,\r\n      state.setWinner,\r\n      state.setRoundNumber,\r\n      state.setUserCards,\r\n      state.setUserCardsSum\r\n    )\r\n\r\n    setResetActive(true);\r\n\r\n    setTimeout(() => {\r\n      setResetActive(false);\r\n    }, 1500);\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <FontAwesomeIcon icon={faSave} className={styles.option} onClick={saveGame} title=\"Zapisz grę\" />\r\n      <FontAwesomeIcon icon={faFolderOpen} className={styles.option} onClick={loadGame} title=\"Wczytaj grę\" />\r\n      <FontAwesomeIcon icon={faSyncAlt} className={styles.option} onClick={handleReset} title=\"Zresetuj grę\" />\r\n      {resetActive && <div className={styles.resetMessage}><h2 className={styles.resetMessage__text}>Reset...</h2></div>}\r\n      {saveActive && <div className={styles.resetMessage}><h2 className={styles.resetMessage__text}>Save...</h2></div>}\r\n      {loadActive && <div className={styles.resetMessage}><h2 className={styles.resetMessage__text}>Load...</h2></div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Settings;","import React, { useContext } from 'react';\r\nimport styles from './Header.module.scss';\r\n\r\nimport Settings from './Settings/Settings';\r\nimport { AppContext } from '../AppContext/AppContext';\r\n\r\nconst Header = ({ saveGame, loadGame }) => {\r\n\r\n  const { roundNumber } = useContext(AppContext);\r\n\r\n  return (\r\n    <header className={styles.header}>\r\n      <Settings saveGame={saveGame} loadGame={loadGame} />\r\n      <p className={`${styles.header__round} ${styles.noSelect}`}>Round {roundNumber}</p>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport styles from './BackgroundText.module.scss';\r\n\r\nconst BackgroundText = () => {\r\n  return (\r\n    <div className={`${styles.backgroundTextWrapper} ${styles.noSelect}`}>\r\n      <h1 className={styles.backgroundTextWrapper__text}>Blackjack pays 3 to 2</h1>\r\n      <h2 className={styles.backgroundTextWrapper__text}>Dealer must stand on 17 and must draw to 16</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BackgroundText;","import React, { useContext } from 'react';\r\nimport styles from './Bet.module.scss';\r\n\r\nimport { AppContext } from '../../AppContext/AppContext';\r\n\r\nconst Bet = ({ getNewDeck }) => {\r\n\r\n  const {\r\n    bet,\r\n    isDealAccepted,\r\n    setIsDealAccepted } = useContext(AppContext);\r\n\r\n  const handleDeal = () => {\r\n    setIsDealAccepted(true);\r\n    getNewDeck();\r\n  }\r\n\r\n  return (\r\n    <div className={styles.bet}>\r\n      {!isDealAccepted && <button className={styles.bet__deal} onClick={handleDeal}>Deal</button>}\r\n      <div className={styles.bet__tokenWrapper}>\r\n        <h2 className={styles.bet__header}>Bet</h2>\r\n        <div className={styles.bet__token}>\r\n          <p>${bet}</p>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Bet;","import React from 'react';\r\nimport styles from './CardPicture.module.scss';\r\n\r\nconst CardPicture = ({ src }) => {\r\n  return (\r\n    <div className={styles.card}>\r\n      <img className={styles.card__img} src={src} alt=\"card\"></img>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardPicture;","import React from 'react';\r\nimport styles from './PlayerCards.module.scss';\r\n\r\nimport CardPicture from '../CardPicture/CardPicture';\r\n\r\nconst PlayerCards = ({ cards, playerCardsSum }) => {\r\n\r\n  const cardsImg = cards.map(card => (\r\n    <CardPicture key={card.code + Math.floor(Math.random() * 10000)} src={card.images.png} />\r\n  ))\r\n\r\n  return (\r\n    <div className={styles.player}>\r\n      {cardsImg}\r\n      {playerCardsSum > 0 && <p className={styles.player__cardsValue}>{playerCardsSum}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlayerCards;","import React from 'react';\r\nimport styles from './ResultMessage.module.scss';\r\n\r\nconst ResultMessage = ({ credit, winner, click, roundNumber }) => {\r\n\r\n  const userIsWinner = (\r\n    <>\r\n      <h2 className={styles.result__header}>Dealer bust!</h2>\r\n      <h3 className={styles.result__header}>You win</h3>\r\n    </>\r\n  )\r\n\r\n  const dealerIsWinner = (\r\n    <>\r\n      <h2 className={`${styles.result__header} ${styles.result__header_big}`}>Bust!</h2>\r\n      <h3 className={styles.result__header}>You lost</h3>\r\n    </>\r\n  )\r\n\r\n  const draw = (\r\n    <>\r\n      <h2 className={`${styles.result__header} ${styles.result__header_big}`}>Draw!</h2>\r\n    </>\r\n  )\r\n\r\n  const gameOver = (\r\n    <>\r\n      <h2 className={`${styles.result__header} ${styles.result__header_big}`}>Game over!</h2>\r\n      <h3 className={styles.result__header}>Your credit is ${credit}</h3>\r\n    </>\r\n  )\r\n\r\n  return (\r\n    <div className={styles.resultWrapper}>\r\n      <div className={styles.result}>\r\n        {(credit === 0 || roundNumber === 5) && gameOver}\r\n        {winner === \"user\" && userIsWinner}\r\n        {winner === \"dealer\" && dealerIsWinner}\r\n        {winner === \"draw\" && draw}\r\n      </div>\r\n      {winner && <button className={styles.result__nextGame} onClick={click}>Next round</button>}\r\n      {(credit === 0 || (roundNumber === 5)) && <button className={styles.result__nextGame} onClick={click}>New game</button>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ResultMessage;","import React, { useContext } from 'react';\r\nimport styles from './Main.module.scss';\r\n\r\nimport BackgroundText from './BackgroundText/BackgroundText';\r\nimport Bet from './Bet/Bet';\r\nimport PlayerCards from './PlayerCards/PlayerCards';\r\nimport ResultMessage from './ResultMessage/ResultMessage';\r\n\r\nimport { AppContext } from '../AppContext/AppContext';\r\nimport { getCards } from '../Root/getCards';\r\nimport { resetGame } from './resetGame';\r\n\r\nconst Main = () => {\r\n\r\n  const {\r\n    bet, setBet,\r\n    deck, setDeck,\r\n    dealerCards, setDealerCards,\r\n    setIsDealAccepted,\r\n    winner,\r\n    userCards, setUserCards,\r\n    userCardsSum, setUserCardsSum,\r\n    setIsUserTurnFinished,\r\n    setIsDoubleDownAvailable,\r\n    setWinner,\r\n    setCredit, credit,\r\n    setRoundNumber, roundNumber,\r\n    dealerCardsSum, setDealerCardsSum } = useContext(AppContext);\r\n\r\n  const getNewDeck = () => {\r\n    if (roundNumber === 1) {\r\n      const newShuffledCardsUrl = 'https://deckofcardsapi.com/api/deck/new/shuffle/?deck_count=6';\r\n      fetch(newShuffledCardsUrl)\r\n        .then(response => {\r\n          if (response.status === 200) {\r\n            return response.json()\r\n          }\r\n          throw Error(response.statusText);\r\n        })\r\n        .then(result => {\r\n          setDeck(result);\r\n          getInitialCards(result.deck_id)\r\n        })\r\n        .catch(err => console.log(`${err}: Failed to get cards from API`));\r\n    } else {\r\n      getInitialCards(deck.deck_id)\r\n    }\r\n  };\r\n\r\n  const getInitialCards = deckId => {\r\n    // get user cards\r\n    getCards(deckId, 2, userCards, setUserCards, setUserCardsSum);\r\n    // get dealer card\r\n    getCards(deckId, 1, dealerCards, setDealerCards, setDealerCardsSum);\r\n  }\r\n\r\n  const handleNextRound = () => {\r\n    if (winner === \"user\") {\r\n      setCredit(credit + 1.5 * bet)\r\n    } else if (winner === \"draw\") {\r\n      setCredit(credit + bet);\r\n    }\r\n    setBet(0);\r\n    setDealerCards(null);\r\n    setDealerCardsSum(0);\r\n    setIsDealAccepted(false);\r\n    setIsDoubleDownAvailable(true);\r\n    setIsUserTurnFinished(false);\r\n    setWinner('');\r\n    setRoundNumber(roundNumber + 1);\r\n    setUserCards(null);\r\n    setUserCardsSum(0);\r\n  }\r\n\r\n  const handleNewGame = () => {\r\n\r\n    resetGame(\r\n      setCredit,\r\n      setBet,\r\n      setDealerCards,\r\n      setDealerCardsSum,\r\n      setDeck,\r\n      setIsDealAccepted,\r\n      setIsDoubleDownAvailable,\r\n      setIsUserTurnFinished,\r\n      setWinner,\r\n      setRoundNumber,\r\n      setUserCards,\r\n      setUserCardsSum\r\n    )\r\n  }\r\n\r\n  return (\r\n    <main className={styles.main}>\r\n      {dealerCards &&\r\n        <PlayerCards\r\n          cards={dealerCards}\r\n          playerCardsSum={dealerCardsSum}\r\n        />}\r\n      <BackgroundText />\r\n      {((credit === 0 && winner === \"dealer\") || (roundNumber === 5 && winner)) &&\r\n        <ResultMessage\r\n          credit={credit}\r\n          click={handleNewGame}\r\n          roundNumber={roundNumber}\r\n        />}\r\n      {(winner === \"dealer\" && roundNumber < 5 && credit >= 5) &&\r\n        <ResultMessage\r\n          winner=\"dealer\"\r\n          click={handleNextRound}\r\n        />}\r\n      {(winner === \"user\" && roundNumber < 5 && credit >= 5) &&\r\n        <ResultMessage\r\n          winner=\"user\"\r\n          click={handleNextRound}\r\n        />}\r\n      {(winner === \"draw\" && roundNumber < 5 && credit >= 5) &&\r\n        <ResultMessage\r\n          winner=\"draw\"\r\n          click={handleNextRound}\r\n        />}\r\n      {userCards &&\r\n        <PlayerCards\r\n          cards={userCards}\r\n          playerCardsSum={userCardsSum}\r\n        />}\r\n      {bet !== 0 &&\r\n        <Bet\r\n          getNewDeck={getNewDeck}\r\n        />}\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Main;","import React, { useState } from 'react';\nimport styles from './Root.module.scss';\n\nimport Footer from '../Footer/Footer';\nimport Header from '../Header/Header';\nimport Main from '../Main/Main';\n\nimport { AppContext } from '../AppContext/AppContext';\n\nconst Root = () => {\n\n  const [bet, setBet] = useState(0);\n  const [credit, setCredit] = useState(1000);\n  const [dealerCards, setDealerCards] = useState();\n  const [dealerCardsSum, setDealerCardsSum] = useState(0);\n  const [deck, setDeck] = useState();\n  const [isDealAccepted, setIsDealAccepted] = useState(false);\n  const [isDoubleDownAvailable, setIsDoubleDownAvailable] = useState(true);\n  const [isUserTurnFinished, setIsUserTurnFinished] = useState(false);\n  const [winner, setWinner] = useState('');\n  const [roundNumber, setRoundNumber] = useState(1);\n  const [userCards, setUserCards] = useState();\n  const [userCardsSum, setUserCardsSum] = useState(0);\n  const [saveActive, setSaveActive] = useState(false);\n  const [loadActive, setLoadActive] = useState(false);\n\n  const state = {\n    bet, setBet,\n    credit, setCredit,\n    dealerCards, setDealerCards,\n    dealerCardsSum, setDealerCardsSum,\n    deck, setDeck,\n    isDealAccepted, setIsDealAccepted,\n    isDoubleDownAvailable, setIsDoubleDownAvailable,\n    isUserTurnFinished, setIsUserTurnFinished,\n    winner, setWinner,\n    roundNumber, setRoundNumber,\n    userCards, setUserCards,\n    userCardsSum, setUserCardsSum,\n    saveActive, loadActive\n  }\n\n  const handleSave = () => {\n    localStorage.setItem(\"stateGame\", JSON.stringify(state));\n    setSaveActive(true);\n\n    setTimeout(() => {\n      setSaveActive(false);\n    }, 1500);\n  }\n\n  const handleLoad = () => {\n\n\n    const gameToLoad = JSON.parse(localStorage.getItem(\"stateGame\"));\n    if (gameToLoad) {\n      setLoadActive(true);\n\n      setBet(gameToLoad.bet);\n      setCredit(gameToLoad.credit);\n      setDealerCards(gameToLoad.dealerCards);\n      setDealerCardsSum(gameToLoad.dealerCardsSum);\n      setDeck(gameToLoad.deck);\n      setIsDealAccepted(gameToLoad.isDealAccepted);\n      setIsDoubleDownAvailable(gameToLoad.isDoubleDownAvailable);\n      setIsUserTurnFinished(gameToLoad.isUserTurnFinished);\n      setWinner(gameToLoad.winner);\n      setRoundNumber(gameToLoad.roundNumber);\n      setUserCards(gameToLoad.userCards);\n      setUserCardsSum(gameToLoad.userCardsSum);\n\n      setTimeout(() => {\n        setLoadActive(false);\n      }, 1500);\n    }\n  }\n\n  return (\n    <AppContext.Provider value={state} >\n      <div className={styles.wrapper}>\n        <Header saveGame={handleSave} loadGame={handleLoad} />\n        <Main />\n        <Footer />\n      </div>\n    </AppContext.Provider>\n  );\n}\n\nexport default Root;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Root from './components/Root/Root';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Root />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}