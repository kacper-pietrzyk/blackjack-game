{"version":3,"sources":["components/Footer/Stats/RoundHistory/RoundHistory.module.scss","components/Main/ResultMessage/ResultMessage.module.scss","components/Footer/Tokens/Tokens.module.scss","components/Footer/Stats/Ranking/Ranking.module.scss","components/Header/Settings/Settings.module.scss","components/Header/Settings/Info/Info.module.scss","components/Main/BackgroundText/BackgroundText.module.scss","components/Main/Bet/Bet.module.scss","components/Footer/Actions/Actions.module.scss","components/Footer/Stats/Stats.module.scss","components/Footer/Footer.module.scss","components/Header/Header.module.scss","components/Main/PlayerCards/PlayerCards.module.scss","components/Main/PlayerCards/CardPicture/CardPicture.module.scss","components/Root/Root.module.scss","components/Main/Main.module.scss","components/AppContext/AppContext.js","components/Root/getCards.js","components/Root/getPlayerCardsSum.js","components/Footer/Actions/Actions.jsx","components/Footer/Stats/Ranking/Ranking.jsx","components/Footer/Stats/RoundHistory/RoundHistory.jsx","components/Footer/Stats/Stats.jsx","components/Footer/Tokens/Tokens.jsx","components/Footer/Footer.jsx","components/Header/Settings/Info/Info.jsx","components/Main/resetGame.js","components/Header/Settings/Settings.jsx","components/Header/Header.jsx","components/Main/BackgroundText/BackgroundText.js","components/Main/Bet/Bet.js","components/Main/PlayerCards/CardPicture/CardPicture.js","components/Main/PlayerCards/PlayerCards.js","components/Main/ResultMessage/ResultMessage.js","components/Main/Main.js","components/Root/Root.jsx","reportWebVitals.js","index.js"],"names":["module","exports","AppContext","createContext","getCards","deckId","numberOfCards","cardsUrl","Promise","resolve","reject","fetch","then","response","status","json","Error","statusText","result","cards","catch","err","console","log","alert","getPlayerCardsSum","allValues","map","card","value","Number","numberValues","filter","isInteger","aceValues","integerSum","i","length","sum","forEach","Actions","useContext","bet","setBet","credit","setCredit","dealerCards","setDealerCards","dealerCardsSum","setDealerCardsSum","deck","isDoubleDownAvailable","isUserTurnFinished","setIsDoubleDownAvailable","setIsUserTurnFinished","setWinner","userCards","setUserCards","userCardsSum","setUserCardsSum","userIsDone","dealerTurn","userSum","a","dealerSum","allDealerCards","deck_id","newDealerCard","push","userTurn","e","target","name","newUserCard","handleAction","className","styles","actionsWrapper","actionsWrapper__action","onClick","Ranking","handleShowRanking","rankingToLoad","JSON","parse","localStorage","getItem","ranking","rank","ranking__listItem","indexOf","finalCredit","ranking__date","fullDate","time","date","id","ranking__header","ranking__close","ranking__list","ranking__dateHeader","ranking__empty","ranking__emptyHeader","RoundHistory","handleShowRoundHistory","history","roundNumber","number","roundHistory__listItem","Math","random","roundHistory__optionalDisplay","roundHistory__listItem_cards","roundHistory__cardsWrapper","roundHistory__card","src","images","png","alt","winner","player","profit","roundHistoryWrapper","roundHistoryWrapper__header","roundHistoryWrapper__close","roundHistory","roundHistory__list","Stats","useState","showRoundHistory","setShowRoundHistory","showRanking","setShowRanking","stats","stats__button","gamePause","Tokens","increaseBet","tokensWrapper","tokensWrapper__token","tokensWrapper__token_5","tokensWrapper__token_10","tokensWrapper__token_25","tokensWrapper__token_100","tokensWrapper__token_allIn","tokensWrapper__allIn","Footer","isDealAccepted","footer","noSelect","footer__credit","Info","handleShowInfo","info","info__header","info__close","info__spaceParagraph","info__link","href","resetGame","setDeck","setIsDealAccepted","setRoundNumber","setHistory","Settings","saveGame","loadGame","state","isResetActive","setIsResetActive","showInfo","setShowInfo","icon","faSave","option","title","faFolderOpen","faSyncAlt","setTimeout","faQuestion","isSaveActive","message","message__text","isLoadActive","Header","header","header__round","BackgroundText","backgroundTextWrapper","backgroundTextWrapper__text","backgroundTextWrapper__text_big","backgroundTextWrapper__betInfo","Bet","startNewDeal","bet__deal","bet__tokenWrapper","bet__header","bet__token","bet__cancel","CardPicture","card__img","PlayerCards","playerCardsSum","cardsImg","code","floor","player__cardsValue","ResultMessage","newGame","userIsWinner","result__header","dealerIsWinner","result__header_big","draw","gameOver","resultWrapper","result__nextGame","Main","getInitialCards","initialUserCards","initialDealerCards","handleNextRound","main","currentRanking","Date","toLocaleDateString","toLocaleTimeString","newRankingData","newSortedRanking","sort","b","splice","setItem","stringify","updateRanking","Root","setIsLoadActive","setIsSaveActive","window","addEventListener","preventDefault","returnValue","Provider","wrapper","gameSave","prompt","gameToLoad","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eead968a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"roundHistoryWrapper\":\"RoundHistory_roundHistoryWrapper__1Pqh9\",\"roundHistoryWrapper__header\":\"RoundHistory_roundHistoryWrapper__header__3mLMd\",\"roundHistoryWrapper__close\":\"RoundHistory_roundHistoryWrapper__close__Xk9MJ\",\"roundHistory\":\"RoundHistory_roundHistory__2L7P5\",\"roundHistory__list\":\"RoundHistory_roundHistory__list__2E9c8\",\"roundHistory__listItem\":\"RoundHistory_roundHistory__listItem__2djhN\",\"roundHistory__listItem_cards\":\"RoundHistory_roundHistory__listItem_cards__35YEc\",\"roundHistory__optionalDisplay\":\"RoundHistory_roundHistory__optionalDisplay__kznYH\",\"roundHistory__card\":\"RoundHistory_roundHistory__card__2ek5g\",\"roundHistory__cardsWrapper\":\"RoundHistory_roundHistory__cardsWrapper__1YKhR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"resultWrapper\":\"ResultMessage_resultWrapper__1HeYg\",\"result\":\"ResultMessage_result__3Xdf_\",\"result__header\":\"ResultMessage_result__header__4S2VU\",\"result__header_big\":\"ResultMessage_result__header_big__3Y-oQ\",\"result__nextGame\":\"ResultMessage_result__nextGame__2cO3g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tokensWrapper\":\"Tokens_tokensWrapper__2q1i4\",\"tokensWrapper__token\":\"Tokens_tokensWrapper__token__3MVuB\",\"tokensWrapper__token_5\":\"Tokens_tokensWrapper__token_5__1cllo\",\"tokensWrapper__token_10\":\"Tokens_tokensWrapper__token_10__2mBy0\",\"tokensWrapper__token_25\":\"Tokens_tokensWrapper__token_25__2ZjJV\",\"tokensWrapper__token_100\":\"Tokens_tokensWrapper__token_100__2jcj5\",\"tokensWrapper__token_allIn\":\"Tokens_tokensWrapper__token_allIn__BuXdU\",\"tokensWrapper__allIn\":\"Tokens_tokensWrapper__allIn__1c1xq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ranking\":\"Ranking_ranking__gJYAn\",\"ranking__header\":\"Ranking_ranking__header__2msl4\",\"ranking__close\":\"Ranking_ranking__close__1TNkO\",\"ranking__list\":\"Ranking_ranking__list__3u9a5\",\"ranking__listItem\":\"Ranking_ranking__listItem__fqjeq\",\"ranking__date\":\"Ranking_ranking__date__m_WLZ\",\"ranking__dateHeader\":\"Ranking_ranking__dateHeader__28VHX\",\"ranking__empty\":\"Ranking_ranking__empty__3BnbX\",\"ranking__emptyHeader\":\"Ranking_ranking__emptyHeader__1BFPA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"option\":\"Settings_option__2bTZr\",\"message\":\"Settings_message__3jQ7l\",\"message__text\":\"Settings_message__text__Shj0n\",\"gamePause\":\"Settings_gamePause__3gGqG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"info\":\"Info_info__10A5E\",\"info__header\":\"Info_info__header__3uRh7\",\"info__close\":\"Info_info__close__18l8K\",\"info__link\":\"Info_info__link__G-Bhr\",\"info__spaceParagraph\":\"Info_info__spaceParagraph__nsm69\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backgroundTextWrapper\":\"BackgroundText_backgroundTextWrapper__3RmOg\",\"backgroundTextWrapper__text\":\"BackgroundText_backgroundTextWrapper__text__yVKYi\",\"backgroundTextWrapper__text_big\":\"BackgroundText_backgroundTextWrapper__text_big__DwUmV\",\"backgroundTextWrapper__betInfo\":\"BackgroundText_backgroundTextWrapper__betInfo__1htfZ\",\"noSelect\":\"BackgroundText_noSelect__3WTzX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bet\":\"Bet_bet__8BES6\",\"bet__tokenWrapper\":\"Bet_bet__tokenWrapper__3aPfS\",\"bet__header\":\"Bet_bet__header__2htp4\",\"bet__token\":\"Bet_bet__token__2V7tj\",\"bet__cancel\":\"Bet_bet__cancel__1sOJj\",\"bet__deal\":\"Bet_bet__deal__oJWhe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actionsWrapper\":\"Actions_actionsWrapper__2j_7d\",\"actionsWrapper__action\":\"Actions_actionsWrapper__action__2v3sA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stats\":\"Stats_stats__2Ki9f\",\"stats__button\":\"Stats_stats__button__141gv\",\"gamePause\":\"Stats_gamePause__Dtu1h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__27C9m\",\"footer__credit\":\"Footer_footer__credit__3Oc-j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__gdzrj\",\"header__round\":\"Header_header__round__bK0mY\",\"noSelect\":\"Header_noSelect__1BQCC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"player\":\"PlayerCards_player__1jtSt\",\"player__cardsValue\":\"PlayerCards_player__cardsValue__1D9R9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"CardPicture_card__20-vO\",\"card__img\":\"CardPicture_card__img__Xv2Cf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Root_wrapper__2H26R\",\"noSelect\":\"Root_noSelect__wHgVK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Main_main__f7gDU\"};","import { createContext } from 'react';\r\n\r\nexport const AppContext = createContext();","export const getCards = (deckId, numberOfCards) => {\r\n\r\n  const cardsUrl = `https://deckofcardsapi.com/api/deck/${deckId}/draw/?count=${numberOfCards}`;\r\n\r\n  return new Promise((resolve, reject) => {\r\n\r\n    fetch(cardsUrl)\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          return response.json()\r\n        }\r\n        throw Error(response.statusText);\r\n      })\r\n      .then(result => {\r\n        resolve(result.cards)\r\n        reject('Failed to get cards')\r\n      })\r\n      .catch(err => {\r\n        console.log(`${err}: Failed to get cards from API`);\r\n        alert(\"Server error - unfortunately the cards could not be loaded. Please try start new game.\");\r\n      });\r\n  })\r\n}","export const getPlayerCardsSum = cards => {\r\n\r\n  const allValues = cards.map(card => {\r\n    if (card.value === \"JACK\" ||\r\n      card.value === \"QUEEN\" ||\r\n      card.value === \"KING\") {\r\n      return 10;\r\n    } else if (card.value === \"ACE\") {\r\n      return card.value;\r\n    }\r\n    else {\r\n      return Number(card.value);\r\n    }\r\n  })\r\n\r\n  const numberValues = allValues.filter(value => Number.isInteger(value));\r\n  const aceValues = allValues.filter(value => value === \"ACE\");\r\n\r\n  let integerSum = 0;\r\n  for (let i = 0; i < numberValues.length; i++) {\r\n    integerSum += numberValues[i];\r\n  }\r\n\r\n  let sum = integerSum;\r\n  if (aceValues.length) {\r\n    aceValues.forEach(() => {\r\n      if (sum <= 10) {\r\n        sum += 11;\r\n      } else {\r\n        sum += 1;\r\n      }\r\n    })\r\n  }\r\n  return sum;\r\n}","import React, { useContext } from 'react';\r\nimport styles from './Actions.module.scss';\r\n\r\nimport { AppContext } from '../../AppContext/AppContext';\r\nimport { getCards } from '../../Root/getCards';\r\nimport { getPlayerCardsSum } from '../../Root/getPlayerCardsSum';\r\n\r\nconst Actions = () => {\r\n\r\n  const {\r\n    bet, setBet,\r\n    credit, setCredit,\r\n    dealerCards, setDealerCards,\r\n    dealerCardsSum, setDealerCardsSum,\r\n    deck,\r\n    isDoubleDownAvailable,\r\n    isUserTurnFinished,\r\n    setIsDoubleDownAvailable,\r\n    setIsUserTurnFinished,\r\n    setWinner,\r\n    userCards, setUserCards,\r\n    userCardsSum, setUserCardsSum } = useContext(AppContext);\r\n\r\n  let userIsDone = isUserTurnFinished;\r\n\r\n  const dealerTurn = async (userSum) => {\r\n    let dealerSum = dealerCardsSum;\r\n    const allDealerCards = dealerCards;\r\n\r\n    if (userSum > 21) {\r\n      const newDealerCard = await getCards(deck.deck_id, 1);\r\n      allDealerCards.push(...newDealerCard);\r\n      setDealerCards(allDealerCards);\r\n      dealerSum = getPlayerCardsSum(allDealerCards)\r\n      setDealerCardsSum(dealerSum);\r\n    } else {\r\n\r\n      while (dealerSum < 17) {\r\n        const newDealerCard = await getCards(deck.deck_id, 1);\r\n        allDealerCards.push(...newDealerCard);\r\n        setDealerCards(allDealerCards);\r\n        dealerSum = getPlayerCardsSum(allDealerCards)\r\n        setDealerCardsSum(dealerSum);\r\n      }\r\n    }\r\n    return dealerSum;\r\n  }\r\n\r\n  const userTurn = async (e) => {\r\n    if (e.target.name === \"Hit\") {\r\n      const newUserCard = await getCards(deck.deck_id, 1);\r\n      setUserCards([...userCards, ...newUserCard]);\r\n      const userSum = getPlayerCardsSum([...userCards, ...newUserCard]);\r\n      setUserCardsSum(userSum);\r\n      setIsDoubleDownAvailable(false);\r\n      return userSum;\r\n\r\n    } else if (e.target.name === \"Stand\") {\r\n      setIsUserTurnFinished(true);\r\n      userIsDone = true;\r\n      const userSum = userCardsSum;\r\n      return userSum;\r\n\r\n    } else if (e.target.name === \"DoubleDown\") {\r\n      const newUserCard = await getCards(deck.deck_id, 1);\r\n      setUserCards([...userCards, ...newUserCard]);\r\n      const userSum = getPlayerCardsSum([...userCards, ...newUserCard]);\r\n      setUserCardsSum(userSum);\r\n      setBet(bet * 2);\r\n      setCredit(credit - bet);\r\n      setIsUserTurnFinished(true);\r\n      userIsDone = true;\r\n      return userSum;\r\n    }\r\n  }\r\n\r\n  const handleAction = async e => {\r\n    const userSum = await userTurn(e);\r\n\r\n    let dealerSum;\r\n    if (userSum > 21 || e.target.name === \"Stand\" || e.target.name === \"DoubleDown\") {\r\n      dealerSum = await dealerTurn(userSum);\r\n    }\r\n\r\n    if (userSum > 21) {\r\n      setWinner(\"dealer\");\r\n      setIsUserTurnFinished(true);\r\n      userIsDone = true;\r\n    }\r\n    else if (userIsDone) {\r\n      if (userSum === dealerSum) {\r\n        setWinner(\"draw\");\r\n\r\n      } else if (userSum > dealerSum || dealerSum > 21) {\r\n        setWinner(\"user\");\r\n\r\n      } else {\r\n        setWinner(\"dealer\");\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {!isUserTurnFinished && (\r\n        <div className={styles.actionsWrapper}>\r\n          <button\r\n            className={styles.actionsWrapper__action}\r\n            name=\"Hit\"\r\n            onClick={handleAction}>\r\n            Hit\r\n        </button>\r\n          <button\r\n            className={styles.actionsWrapper__action}\r\n            name=\"Stand\"\r\n            onClick={handleAction}>\r\n            Stand\r\n        </button>\r\n          {(isDoubleDownAvailable && (credit >= bet)) &&\r\n            <button\r\n              className={styles.actionsWrapper__action}\r\n              name=\"DoubleDown\"\r\n              onClick={handleAction}>\r\n              Double Down\r\n        </button>}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Actions;","import React from 'react';\r\nimport styles from './Ranking.module.scss';\r\n\r\nconst Ranking = ({ handleShowRanking }) => {\r\n\r\n  let rankingToLoad = JSON.parse(localStorage.getItem(\"ranking\"));\r\n  //rankingToLoad === null in first game - when there isn't currentRanking in localStorage\r\n  if (rankingToLoad === null) {\r\n    rankingToLoad = [];\r\n  }\r\n\r\n  const ranking = rankingToLoad.map(rank => (\r\n    <li className={styles.ranking__listItem} key={rank.id}>\r\n      <p>{rankingToLoad.indexOf(rank) + 1}</p>\r\n      <p>${rank.finalCredit}</p>\r\n      <div className={styles.ranking__date}>\r\n        <p>{rank.fullDate.time}</p>\r\n        <p>{rank.fullDate.date}</p>\r\n      </div>\r\n    </li>\r\n  ));\r\n\r\n  return (\r\n    <div className={styles.ranking}>\r\n      <h2 className={styles.ranking__header}>Top 5 historic results</h2>\r\n      <button className={styles.ranking__close} onClick={handleShowRanking}>&times;</button>\r\n      <ul className={styles.ranking__list}>\r\n        <li className={styles.ranking__listItem}>\r\n          <p>No.</p>\r\n          <p>credit</p>\r\n          <p className={styles.ranking__dateHeader}>Date</p>\r\n        </li>\r\n        {ranking.length ? ranking : (\r\n          <div className={styles.ranking__empty}>\r\n            <h3 className={styles.ranking__emptyHeader}>There is no record yet.</h3>\r\n            <h2 className={styles.ranking__emptyHeader}>Your result can be first!</h2>\r\n          </div>)\r\n        }\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Ranking;","import React, { useContext } from 'react';\r\nimport styles from './RoundHistory.module.scss';\r\n\r\nimport { AppContext } from '../../../AppContext/AppContext';\r\n\r\nconst RoundHistory = ({ handleShowRoundHistory }) => {\r\n\r\n  const { history } = useContext(AppContext);\r\n\r\n\r\n  const roundNumber = history.roundNumber.map(number => (\r\n    <li className={styles.roundHistory__listItem} key={Math.random()}>{number}</li>\r\n  ));\r\n\r\n  const userCards = history.userCards.map(cards => (\r\n    cards === \"Your cards\" ? <li className={`${styles.roundHistory__listItem} ${styles.roundHistory__optionalDisplay}`} key=\"header\">{cards}</li> :\r\n      (<li className={`${styles.roundHistory__listItem} ${styles.roundHistory__listItem_cards}`} key={Math.random()}>\r\n        {cards.map(card => (\r\n          <div key={Math.random()} className={styles.roundHistory__cardsWrapper}>\r\n            <img className={styles.roundHistory__card} src={card.images.png} alt=\"card\" />\r\n          </div>\r\n        ))}\r\n      </li>)\r\n  ));\r\n\r\n  const userSum = history.userSum.map(value => (\r\n    <li className={styles.roundHistory__listItem} key={Math.random()}>{value}</li>\r\n  ));\r\n\r\n  const dealerCards = history.dealerCards.map(cards => (\r\n    cards === \"Dealer cards\" ? <li className={`${styles.roundHistory__listItem} ${styles.roundHistory__optionalDisplay}`} key=\"header\">{cards}</li> :\r\n      (<li className={`${styles.roundHistory__listItem} ${styles.roundHistory__listItem_cards}`} key={Math.random()}>\r\n        {cards.map(card => (\r\n          <div key={Math.random()} className={styles.roundHistory__cardsWrapper}>\r\n            <img className={styles.roundHistory__card} src={card.images.png} alt=\"card\" />\r\n          </div>\r\n        ))}\r\n      </li>)\r\n  ));\r\n\r\n  const dealerSum = history.dealerSum.map(value => (\r\n    <li className={styles.roundHistory__listItem} key={Math.random()}>{value}</li>\r\n  ));\r\n\r\n  const winner = history.winner.map(player => (\r\n    <li className={styles.roundHistory__listItem} key={Math.random()}>{player}</li>\r\n  ));\r\n\r\n  const bet = history.bet.map(value => (\r\n    <li className={`${styles.roundHistory__listItem} ${styles.roundHistory__optionalDisplay}`} key={Math.random()}>{value}</li>\r\n  ));\r\n\r\n  const profit = history.profit.map(value => (\r\n    <li className={`${styles.roundHistory__listItem} ${styles.roundHistory__optionalDisplay}`} key={Math.random()}>{value}</li>\r\n  ));\r\n\r\n  const credit = history.credit.map(value => (\r\n    <li className={`${styles.roundHistory__listItem} ${styles.roundHistory__optionalDisplay}`} key={Math.random()}>{value}</li>\r\n  ));\r\n\r\n  return (\r\n    <div className={styles.roundHistoryWrapper}>\r\n      <h2 className={styles.roundHistoryWrapper__header}>Round history</h2>\r\n      <button className={styles.roundHistoryWrapper__close} onClick={handleShowRoundHistory}>&times;</button>\r\n      <div className={styles.roundHistory}>\r\n        <ul className={styles.roundHistory__list}>\r\n          {roundNumber}\r\n        </ul>\r\n        <ul className={styles.roundHistory__list}>\r\n          {userCards}\r\n        </ul>\r\n        <ul className={styles.roundHistory__list}>\r\n          {userSum}\r\n        </ul>\r\n        <ul className={styles.roundHistory__list}>\r\n          {dealerCards}\r\n        </ul>\r\n        <ul className={styles.roundHistory__list}>\r\n          {dealerSum}\r\n        </ul>\r\n        <ul className={styles.roundHistory__list}>\r\n          {winner}\r\n        </ul>\r\n        <ul className={styles.roundHistory__list}>\r\n          {bet}\r\n        </ul>\r\n        <ul className={styles.roundHistory__list}>\r\n          {profit}\r\n        </ul>\r\n        <ul className={styles.roundHistory__list}>\r\n          {credit}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RoundHistory;","import React, { useState } from 'react';\r\nimport styles from './Stats.module.scss';\r\n\r\nimport Ranking from './Ranking/Ranking';\r\nimport RoundHistory from './RoundHistory/RoundHistory';\r\n\r\nconst Stats = () => {\r\n\r\n  const [showRoundHistory, setShowRoundHistory] = useState(false);\r\n  const [showRanking, setShowRanking] = useState(false);\r\n\r\n  const handleShowRanking = e => {\r\n    if (e.target.name === \"show\") {\r\n      setShowRanking(true);\r\n    } else {\r\n      setShowRanking(false);\r\n    }\r\n  }\r\n\r\n  const handleShowRoundHistory = e => {\r\n    if (e.target.name === \"show\") {\r\n      setShowRoundHistory(true);\r\n    } else {\r\n      setShowRoundHistory(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={styles.stats}>\r\n      <button\r\n        className={styles.stats__button}\r\n        name=\"show\"\r\n        onClick={handleShowRanking}>\r\n        Ranking\r\n      </button>\r\n      <button\r\n        className={styles.stats__button}\r\n        name=\"show\"\r\n        onClick={handleShowRoundHistory}>\r\n        Round History\r\n      </button>\r\n      {(showRanking || showRoundHistory) &&\r\n        <div\r\n          className={styles.gamePause}>\r\n        </div>}\r\n      {showRanking &&\r\n        <Ranking\r\n          handleShowRanking={handleShowRanking} />}\r\n      {showRoundHistory &&\r\n        <RoundHistory\r\n          handleShowRoundHistory={handleShowRoundHistory} />}\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default Stats;","import React, { useContext } from 'react';\r\nimport styles from './Tokens.module.scss';\r\n\r\nimport { AppContext } from '../../AppContext/AppContext';\r\n\r\nconst Tokens = () => {\r\n\r\n  const {\r\n    bet, setBet,\r\n    credit, setCredit, } = useContext(AppContext);\r\n\r\n  const increaseBet = e => {\r\n    const value = Number(e.target.value);\r\n    setCredit(credit - value);\r\n    setBet(bet + value);\r\n  }\r\n\r\n  return (\r\n    <div className={styles.tokensWrapper}>\r\n      {credit >= 5 && <button className={`${styles.tokensWrapper__token} ${styles.tokensWrapper__token_5}`} value={5} onClick={increaseBet}>$5</button>}\r\n      {credit >= 10 && <button className={`${styles.tokensWrapper__token} ${styles.tokensWrapper__token_10}`} value={10} onClick={increaseBet}>$10</button>}\r\n      {credit >= 25 && <button className={`${styles.tokensWrapper__token} ${styles.tokensWrapper__token_25}`} value={25} onClick={increaseBet}>$25</button>}\r\n      {credit >= 100 && <button className={`${styles.tokensWrapper__token} ${styles.tokensWrapper__token_100}`} value={100} onClick={increaseBet}>$100</button>}\r\n      {credit > 0 && <button className={`${styles.tokensWrapper__token} ${styles.tokensWrapper__token_allIn}`} value={credit} onClick={increaseBet}>All-in</button>}\r\n      {credit === 0 && <h2 className={styles.tokensWrapper__allIn}>All-in</h2>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tokens;","import React, { useContext } from 'react';\r\nimport styles from './Footer.module.scss';\r\n\r\nimport Actions from './Actions/Actions.jsx';\r\nimport Stats from './Stats/Stats.jsx';\r\nimport Tokens from './Tokens/Tokens.jsx';\r\n\r\nimport { AppContext } from '../AppContext/AppContext';\r\n\r\nconst Footer = () => {\r\n\r\n  const {\r\n    credit,\r\n    isDealAccepted } = useContext(AppContext);\r\n\r\n  return (\r\n    <footer className={`${styles.footer} ${styles.noSelect}`}>\r\n      <Stats />\r\n      {!isDealAccepted && <Tokens />}\r\n      {isDealAccepted && <Actions />}\r\n      <p className={styles.footer__credit}>Credit: ${credit}</p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport styles from './Info.module.scss';\r\n\r\nconst Info = ({ handleShowInfo }) => {\r\n  return (\r\n    <div className={styles.info}>\r\n      <h2 className={styles.info__header}>Information about Blackjack game</h2>\r\n      <button className={styles.info__close} name=\"close\" onClick={handleShowInfo}>&times;</button>\r\n      <div>\r\n        <p>This game card is 1-on-1 (player vs automated dealer) turn based blackjack game.</p>\r\n        <p>Starting credit is $1000.</p>\r\n        <p className={styles.info__spaceParagraph}>Cards from 6 decks are shuffled before the game begins.</p>\r\n        <p>Each game consist of 5 rounds. After game the final credit is added to ranking.</p>\r\n        <p>Each round starts with the player placing a bet and then the cards are dealt.</p>\r\n        <p className={styles.info__spaceParagraph}>Winnings are always 1.5x the bet, losing means the bet is gone. Draw means no profit and no loss.</p>\r\n        <p>During the game the hands from every round and their result is saved and displayed in 'Round History'.</p>\r\n        <p>The game can be saved, loaded and reset at any time by icons in the upper left corner.</p>\r\n        <p className={styles.info__spaceParagraph}>The game saves (as autosave) when the tab or window is closed.</p>\r\n        <p>More information about blackjack can be read <a className={styles.info__link} href=\"https://pl.wikipedia.org/wiki/Blackjack\">here</a>.</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Info;","export const resetGame = (setBet, setCredit, setDealerCards, setDealerCardsSum, setDeck, setIsDealAccepted, setIsDoubleDownAvailable, setIsUserTurnFinished, setRoundNumber, setHistory, setUserCards, setUserCardsSum, setWinner) => {\r\n\r\n  const roundHistory = {\r\n    bet: [\"Bet\"],\r\n    credit: [\"Credit\"],\r\n    dealerCards: [\"Dealer cards\"],\r\n    dealerSum: [\"Dealer sum\"],\r\n    userCards: [\"Your cards\"],\r\n    userSum: [\"Your sum\"],\r\n    profit: [\"Profit\"],\r\n    roundNumber: [\"Round\"],\r\n    winner: [\"Winner\"],\r\n  }\r\n\r\n  setBet(0);\r\n  setCredit(1000);\r\n  setDealerCards([]);\r\n  setDealerCardsSum(0);\r\n  setDeck()\r\n  setIsDealAccepted(false);\r\n  setIsDoubleDownAvailable(true);\r\n  setIsUserTurnFinished(false);\r\n  setRoundNumber(1);\r\n  setHistory(roundHistory);\r\n  setUserCards([]);\r\n  setUserCardsSum(0);\r\n  setWinner('');\r\n}","import React, { useState, useContext } from 'react';\r\nimport styles from './Settings.module.scss';\r\n\r\nimport Info from './Info/Info.jsx';\r\n\r\nimport { AppContext } from '../../AppContext/AppContext';\r\nimport { resetGame } from '../../Main/resetGame';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSave, faFolderOpen, faSyncAlt, faQuestion } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Settings = ({ saveGame, loadGame }) => {\r\n\r\n  const state = useContext(AppContext);\r\n\r\n  const [isResetActive, setIsResetActive] = useState(false);\r\n  const [showInfo, setShowInfo] = useState(false);\r\n\r\n  const handleReset = () => {\r\n\r\n    resetGame(\r\n      state.setBet,\r\n      state.setCredit,\r\n      state.setDealerCards,\r\n      state.setDealerCardsSum,\r\n      state.setDeck,\r\n      state.setIsDealAccepted,\r\n      state.setIsDoubleDownAvailable,\r\n      state.setIsUserTurnFinished,\r\n      state.setRoundNumber,\r\n      state.setHistory,\r\n      state.setUserCards,\r\n      state.setUserCardsSum,\r\n      state.setWinner\r\n    )\r\n\r\n    setIsResetActive(true);\r\n\r\n    setTimeout(() => {\r\n      setIsResetActive(false);\r\n    }, 1000);\r\n  }\r\n\r\n  const handleShowInfo = e => {\r\n    if (e.target.name === \"close\") {\r\n      setShowInfo(false);\r\n    } else {\r\n      setShowInfo(true);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <FontAwesomeIcon\r\n        icon={faSave}\r\n        className={styles.option}\r\n        onClick={saveGame}\r\n        title=\"Save game\"\r\n      />\r\n      <FontAwesomeIcon\r\n        icon={faFolderOpen}\r\n        className={styles.option}\r\n        onClick={loadGame}\r\n        title=\"Load game\"\r\n      />\r\n      <FontAwesomeIcon\r\n        icon={faSyncAlt}\r\n        className={styles.option}\r\n        onClick={handleReset}\r\n        title=\"Reset\"\r\n      />\r\n      <FontAwesomeIcon\r\n        icon={faQuestion}\r\n        className={styles.option}\r\n        onClick={handleShowInfo}\r\n        title=\"Info\"\r\n      />\r\n      {showInfo &&\r\n        <>\r\n          <div\r\n            className={styles.gamePause}>\r\n          </div>\r\n          <Info\r\n            handleShowInfo={handleShowInfo} />\r\n        </>}\r\n      {state.isSaveActive &&\r\n        <div\r\n          className={styles.message}>\r\n          <h2 className={styles.message__text}>Saving...</h2>\r\n        </div>}\r\n      {state.isLoadActive &&\r\n        <div\r\n          className={styles.message}>\r\n          <h2 className={styles.message__text}>Loading...</h2>\r\n        </div>}\r\n      {isResetActive &&\r\n        <div\r\n          className={styles.message}>\r\n          <h2 className={styles.message__text}>Reset...</h2>\r\n        </div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Settings;","import React, { useContext } from 'react';\r\nimport styles from './Header.module.scss';\r\n\r\nimport Settings from './Settings/Settings.jsx';\r\nimport { AppContext } from '../AppContext/AppContext';\r\n\r\nconst Header = ({ saveGame, loadGame }) => {\r\n\r\n  const { roundNumber } = useContext(AppContext);\r\n\r\n  return (\r\n    <header className={styles.header}>\r\n      <Settings saveGame={saveGame} loadGame={loadGame} />\r\n      <p className={`${styles.header__round} ${styles.noSelect}`}>Round {roundNumber}</p>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport styles from './BackgroundText.module.scss';\r\n\r\nconst BackgroundText = ({ bet }) => {\r\n  return (\r\n    <div className={`${styles.backgroundTextWrapper} ${styles.noSelect}`}>\r\n      <h1 className={`${styles.backgroundTextWrapper__text} ${styles.backgroundTextWrapper__text_big}`}>Blackjack pays 3 to 2</h1>\r\n      <h2 className={styles.backgroundTextWrapper__text}>Dealer must stand on 17 and must draw to 16</h2>\r\n      {!bet && <h2 className={styles.backgroundTextWrapper__betInfo}>Please place a bet</h2>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BackgroundText;","import React, { useContext } from 'react';\r\nimport styles from './Bet.module.scss';\r\n\r\nimport { AppContext } from '../../AppContext/AppContext';\r\n\r\nconst Bet = ({ startNewDeal }) => {\r\n\r\n  const {\r\n    bet, setBet,\r\n    credit, setCredit,\r\n    isDealAccepted,\r\n    setIsDealAccepted } = useContext(AppContext);\r\n\r\n  const handleDeal = () => {\r\n    setIsDealAccepted(true);\r\n    startNewDeal();\r\n  }\r\n\r\n  const cancelBet = () => {\r\n    setBet(0);\r\n    setCredit(credit + bet)\r\n  }\r\n\r\n  return (\r\n    <div className={styles.bet}>\r\n      {!isDealAccepted &&\r\n        <button\r\n          className={styles.bet__deal}\r\n          onClick={handleDeal}>\r\n          Deal\r\n        </button>}\r\n      <div className={styles.bet__tokenWrapper}>\r\n        <h2 className={styles.bet__header}>Bet</h2>\r\n        <div className={styles.bet__token}>\r\n          <p>${bet}</p>\r\n        </div>\r\n        {!isDealAccepted &&\r\n          <button\r\n            className={styles.bet__cancel}\r\n            onClick={cancelBet}>\r\n            Cancel bet\r\n        </button>}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Bet;","import React from 'react';\r\nimport styles from './CardPicture.module.scss';\r\n\r\nconst CardPicture = ({ src }) => {\r\n  return (\r\n    <div className={styles.card}>\r\n      <img className={styles.card__img} src={src} alt=\"card\"></img>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardPicture;","import React from 'react';\r\nimport styles from './PlayerCards.module.scss';\r\n\r\nimport CardPicture from './CardPicture/CardPicture';\r\n\r\nconst PlayerCards = ({ cards, playerCardsSum }) => {\r\n\r\n  const cardsImg = cards.map(card => (\r\n    <CardPicture key={card.code + Math.floor(Math.random() * 10000)} src={card.images.png} />\r\n  ))\r\n\r\n  return (\r\n    <div className={styles.player}>\r\n      {cardsImg}\r\n      {playerCardsSum > 0 && <p className={styles.player__cardsValue}>{playerCardsSum}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlayerCards;","import React, { useContext } from 'react';\r\nimport styles from './ResultMessage.module.scss';\r\n\r\nimport { AppContext } from '../../AppContext/AppContext';\r\n\r\nconst ResultMessage = ({ finalCredit, newGame }) => {\r\n\r\n  const { bet, roundNumber, winner } = useContext(AppContext);\r\n\r\n  const userIsWinner = (\r\n    <>\r\n      <h2 className={styles.result__header}>Dealer loses!</h2>\r\n      <h3 className={styles.result__header}>You win ${1.5 * bet}</h3>\r\n    </>\r\n  )\r\n\r\n  const dealerIsWinner = (\r\n    <>\r\n      <h2 className={`${styles.result__header} ${styles.result__header_big}`}>Dealer wins!</h2>\r\n      <h3 className={styles.result__header}>You lose ${bet}</h3>\r\n    </>\r\n  )\r\n\r\n  const draw = (\r\n    <>\r\n      <h2 className={`${styles.result__header} ${styles.result__header_big}`}>Draw!</h2>\r\n    </>\r\n  )\r\n\r\n  const gameOver = (\r\n    <>\r\n      <h2 className={`${styles.result__header} ${styles.result__header_big}`}>Game over!</h2>\r\n      <h3 className={styles.result__header}>Your final credit is ${finalCredit}</h3>\r\n    </>\r\n  )\r\n\r\n  return (\r\n    <div className={styles.resultWrapper}>\r\n      <div className={styles.result}>\r\n        {winner === \"user\" && userIsWinner}\r\n        {winner === \"dealer\" && dealerIsWinner}\r\n        {winner === \"draw\" && draw}\r\n        {(finalCredit === 0 || roundNumber === 5) && gameOver}\r\n      </div>\r\n      {(winner && roundNumber < 5 && finalCredit !== 0) && <button className={styles.result__nextGame} onClick={newGame}>Next round</button>}\r\n      {(finalCredit === 0 || (roundNumber === 5)) && <button className={styles.result__nextGame} onClick={newGame}>New game</button>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ResultMessage;","import React, { useContext } from 'react';\r\nimport styles from './Main.module.scss';\r\n\r\nimport BackgroundText from './BackgroundText/BackgroundText';\r\nimport Bet from './Bet/Bet';\r\nimport PlayerCards from './PlayerCards/PlayerCards';\r\nimport ResultMessage from './ResultMessage/ResultMessage';\r\n\r\nimport { AppContext } from '../AppContext/AppContext';\r\nimport { getCards } from '../Root/getCards';\r\nimport { getPlayerCardsSum } from '../Root/getPlayerCardsSum';\r\nimport { resetGame } from './resetGame';\r\n\r\nconst Main = () => {\r\n\r\n  const {\r\n    bet, setBet,\r\n    credit, setCredit,\r\n    deck, setDeck,\r\n    dealerCards, setDealerCards,\r\n    dealerCardsSum, setDealerCardsSum,\r\n    setIsDealAccepted,\r\n    setIsDoubleDownAvailable,\r\n    setIsUserTurnFinished,\r\n    userCards, setUserCards,\r\n    userCardsSum, setUserCardsSum,\r\n    setRoundNumber, roundNumber,\r\n    history, setHistory,\r\n    winner, setWinner } = useContext(AppContext);\r\n\r\n  const startNewDeal = () => {\r\n    // get new deck if it's first round\r\n    if (roundNumber === 1) {\r\n      const newShuffledCardsUrl = 'https://deckofcardsapi.com/api/deck/new/shuffle/?deck_count=6';\r\n      fetch(newShuffledCardsUrl)\r\n        .then(response => {\r\n          if (response.status === 200) {\r\n            return response.json()\r\n          }\r\n          throw Error(response.statusText);\r\n        })\r\n        .then(result => {\r\n          setDeck(result);\r\n          getInitialCards(result.deck_id)\r\n        })\r\n        .catch(err => console.log(`${err}: Failed to get cards from API`));\r\n    } else {\r\n      // if it's not first round - get cards from current deck\r\n      getInitialCards(deck.deck_id)\r\n    }\r\n  };\r\n\r\n  const getInitialCards = async (deckId) => {\r\n    // get user cards\r\n    const initialUserCards = await getCards(deckId, 2);\r\n    setUserCards(initialUserCards);\r\n    const userSum = getPlayerCardsSum(initialUserCards);\r\n    setUserCardsSum(userSum);\r\n\r\n    // get dealer card\r\n    const initialDealerCards = await getCards(deckId, 1);\r\n    setDealerCards(initialDealerCards);\r\n    const dealerSum = getPlayerCardsSum(initialDealerCards);\r\n    setDealerCardsSum(dealerSum);\r\n  }\r\n\r\n  let finalCredit = 0;\r\n  switch (winner) {\r\n    case \"user\":\r\n      finalCredit = 1.5 * bet + credit;\r\n      break;\r\n    case \"dealer\":\r\n      finalCredit = credit;\r\n      break;\r\n    // default - if draw\r\n    default:\r\n      finalCredit = credit + bet;\r\n      break;\r\n  }\r\n\r\n  let profit = 0;\r\n  if (winner === \"user\") {\r\n    profit = 0.5 * bet;\r\n  } else if (winner === \"dealer\") {\r\n    profit = -bet;\r\n  } else {\r\n    profit = 0;\r\n  }\r\n\r\n  const updateRanking = () => {\r\n\r\n    let currentRanking = JSON.parse(localStorage.getItem(\"ranking\"));\r\n    //currentRanking === null in first game - when there isn't currentRanking in localStorage\r\n    if (currentRanking === null) {\r\n      currentRanking = [];\r\n    }\r\n\r\n    const id = Math.floor(Math.random() * 100000)\r\n\r\n    const date = new Date().toLocaleDateString();\r\n    const time = new Date().toLocaleTimeString();\r\n    const fullDate = {\r\n      date,\r\n      time\r\n    }\r\n\r\n    const newRankingData = {\r\n      id,\r\n      finalCredit,\r\n      fullDate\r\n    }\r\n\r\n    const newRanking = [...currentRanking, newRankingData];\r\n    const newSortedRanking = newRanking.sort((a, b) => b.finalCredit - a.finalCredit);\r\n    newSortedRanking.splice(5);\r\n    localStorage.setItem(\"ranking\", JSON.stringify(newSortedRanking));\r\n  }\r\n\r\n  const handleNextRound = () => {\r\n\r\n    setHistory({\r\n      bet: [...history.bet, bet],\r\n      credit: [...history.credit, finalCredit],\r\n      dealerCards: [...history.dealerCards, dealerCards],\r\n      dealerSum: [...history.dealerSum, dealerCardsSum],\r\n      userCards: [...history.userCards, userCards],\r\n      userSum: [...history.userSum, userCardsSum],\r\n      profit: [...history.profit, profit],\r\n      roundNumber: [...history.roundNumber, roundNumber],\r\n      winner: [...history.winner, winner],\r\n    })\r\n\r\n    if (winner === \"user\") {\r\n      setCredit(credit + 1.5 * bet)\r\n    } else if (winner === \"draw\") {\r\n      setCredit(credit + bet);\r\n    }\r\n    setBet(0);\r\n    setDealerCards([]);\r\n    setDealerCardsSum(0);\r\n    setIsDealAccepted(false);\r\n    setIsDoubleDownAvailable(true);\r\n    setIsUserTurnFinished(false);\r\n    setRoundNumber(roundNumber + 1);\r\n    setUserCards([]);\r\n    setUserCardsSum(0);\r\n    setWinner('');\r\n  }\r\n\r\n  const handleNewGame = () => {\r\n\r\n    if (roundNumber === 5 && finalCredit !== 0) {\r\n      updateRanking();\r\n    }\r\n\r\n    resetGame(\r\n      setBet,\r\n      setCredit,\r\n      setDealerCards,\r\n      setDealerCardsSum,\r\n      setDeck,\r\n      setIsDealAccepted,\r\n      setIsDoubleDownAvailable,\r\n      setIsUserTurnFinished,\r\n      setRoundNumber,\r\n      setHistory,\r\n      setUserCards,\r\n      setUserCardsSum,\r\n      setWinner\r\n    )\r\n  }\r\n\r\n  return (\r\n    <main className={styles.main}>\r\n      {dealerCards.length > 0 &&\r\n        <PlayerCards\r\n          cards={dealerCards}\r\n          playerCardsSum={dealerCardsSum}\r\n        />}\r\n      <BackgroundText bet={bet} />\r\n      {userCards.length > 0 &&\r\n        <PlayerCards\r\n          cards={userCards}\r\n          playerCardsSum={userCardsSum}\r\n        />}\r\n      {bet !== 0 &&\r\n        <Bet\r\n          startNewDeal={startNewDeal}\r\n        />}\r\n      {((credit === 0 && winner === \"dealer\") || (roundNumber === 5 && winner)) &&\r\n        <ResultMessage\r\n          finalCredit={finalCredit}\r\n          newGame={handleNewGame}\r\n        />}\r\n      {(winner === \"dealer\" && roundNumber < 5 && credit >= 5) &&\r\n        <ResultMessage\r\n          finalCredit={finalCredit}\r\n          newGame={handleNextRound}\r\n        />}\r\n      {(winner === \"user\" && roundNumber < 5) &&\r\n        <ResultMessage\r\n          finalCredit={finalCredit}\r\n          newGame={handleNextRound}\r\n        />}\r\n      {(winner === \"draw\" && roundNumber < 5) &&\r\n        <ResultMessage\r\n          finalCredit={finalCredit}\r\n          newGame={handleNextRound}\r\n        />}\r\n    </main>\r\n  );\r\n}\r\nexport default Main;","import React, { useState } from 'react';\nimport styles from './Root.module.scss';\n\nimport Footer from '../Footer/Footer.jsx';\nimport Header from '../Header/Header.jsx';\nimport Main from '../Main/Main';\n\nimport { AppContext } from '../AppContext/AppContext';\n\nconst Root = () => {\n\n  const roundHistory = {\n    bet: [\"Bet\"],\n    credit: [\"Credit\"],\n    dealerCards: [\"Dealer cards\"],\n    dealerSum: [\"Dealer sum\"],\n    userCards: [\"Your cards\"],\n    userSum: [\"Your sum\"],\n    profit: [\"Profit\"],\n    roundNumber: [\"Round\"],\n    winner: [\"Winner\"],\n  }\n\n  const [bet, setBet] = useState(0);\n  const [credit, setCredit] = useState(1000);\n  const [dealerCards, setDealerCards] = useState([]);\n  const [dealerCardsSum, setDealerCardsSum] = useState(0);\n  const [deck, setDeck] = useState();\n  const [history, setHistory] = useState(roundHistory);\n  const [isDealAccepted, setIsDealAccepted] = useState(false);\n  const [isDoubleDownAvailable, setIsDoubleDownAvailable] = useState(true);\n  const [isLoadActive, setIsLoadActive] = useState(false);\n  const [isSaveActive, setIsSaveActive] = useState(false);\n  const [isUserTurnFinished, setIsUserTurnFinished] = useState(false);\n  const [roundNumber, setRoundNumber] = useState(1);\n  const [userCards, setUserCards] = useState([]);\n  const [userCardsSum, setUserCardsSum] = useState(0);\n  const [winner, setWinner] = useState('');\n\n  const state = {\n    bet, setBet,\n    credit, setCredit,\n    dealerCards, setDealerCards,\n    dealerCardsSum, setDealerCardsSum,\n    deck, setDeck,\n    history, setHistory,\n    isDealAccepted, setIsDealAccepted,\n    isDoubleDownAvailable, setIsDoubleDownAvailable,\n    isLoadActive,\n    isSaveActive,\n    isUserTurnFinished, setIsUserTurnFinished,\n    roundNumber, setRoundNumber,\n    userCards, setUserCards,\n    userCardsSum, setUserCardsSum,\n    winner, setWinner\n  }\n\n  const handleSave = () => {\n    localStorage.setItem(\"my-game-save\", JSON.stringify(state));\n    setIsSaveActive(true);\n\n    setTimeout(() => {\n      setIsSaveActive(false);\n    }, 1000);\n  }\n\n  const handleLoad = () => {\n\n    const gameSave = prompt(\"If you want to load the game from your own earlier save, please leave 'my-game-save' text below and click 'OK'. If you want to load the game from autosave, please type 'autosave' below and click 'OK'\", \"my-game-save\");\n\n    const gameToLoad = JSON.parse(localStorage.getItem(gameSave));\n    if (gameToLoad) {\n      setIsLoadActive(true);\n\n      setBet(gameToLoad.bet);\n      setCredit(gameToLoad.credit);\n      setDealerCards(gameToLoad.dealerCards);\n      setDealerCardsSum(gameToLoad.dealerCardsSum);\n      setDeck(gameToLoad.deck);\n      setIsDealAccepted(gameToLoad.isDealAccepted);\n      setIsDoubleDownAvailable(gameToLoad.isDoubleDownAvailable);\n      setIsUserTurnFinished(gameToLoad.isUserTurnFinished);\n      setRoundNumber(gameToLoad.roundNumber);\n      setHistory(gameToLoad.history);\n      setUserCards(gameToLoad.userCards);\n      setUserCardsSum(gameToLoad.userCardsSum);\n      setWinner(gameToLoad.winner);\n\n      setTimeout(() => {\n        setIsLoadActive(false);\n      }, 1000);\n    }\n  }\n\n  const handleWarning = e => {\n    e.preventDefault();\n    localStorage.setItem(\"autosave\", JSON.stringify(state));\n    e.returnValue = '';\n  }\n  // Firefox doesn't support this operation\n  window.addEventListener('beforeunload', handleWarning);\n\n  return (\n    <AppContext.Provider value={state} >\n      <div className={styles.wrapper}>\n        <Header saveGame={handleSave} loadGame={handleLoad} />\n        <Main />\n        <Footer />\n      </div>\n    </AppContext.Provider>\n  );\n}\n\nexport default Root;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Root from './components/Root/Root.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Root />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}